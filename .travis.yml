language: node_js
dist: trusty
services:
- mongodb
- postgresql
- redis-server
- docker
addons:
  postgresql: '9.5'
  apt:
    packages:
    - postgresql-9.5-postgis-2.3
branches:
  only:
  - master
  - "/^[0-9]+.[0-9]+.[0-9]+(-.*)?$/"
  - 3.x
  - "/^greenkeeper/.*$/"
cache:
  directories:
  - "$HOME/.npm"
  - "$HOME/.mongodb/versions"
stage: test
env:
  global:
  - COVERAGE_OPTION='./node_modules/.bin/nyc'
  matrix:
  - MONGODB_VERSION=4.0.4
  - MONGODB_VERSION=3.6.9
  - PARSE_SERVER_TEST_DB=postgres
  - PARSE_SERVER_TEST_CACHE=redis
  - NODE_VERSION=11.4.0
matrix:
  allow_failures:
  - env: NODE_VERSION=11.4.0
before_install:
- nvm install $NODE_VERSION
- nvm use $NODE_VERSION
- npm install -g greenkeeper-lockfile@1
before_script:
- node -e 'require("./lib/index.js")'
- psql -c 'create database parse_server_postgres_adapter_test_database;' -U postgres
- psql -c 'CREATE EXTENSION postgis;' -U postgres -d parse_server_postgres_adapter_test_database
- psql -c 'CREATE EXTENSION postgis_topology;' -U postgres -d parse_server_postgres_adapter_test_database
- silent=1 mongodb-runner --start
- greenkeeper-lockfile-update
script:
- npm run lint
- npm run coverage
after_script:
- greenkeeper-lockfile-upload
- bash <(curl -s https://codecov.io/bash)
jobs:
  include:
  - stage: release
    node_js: '10'
    env:
    before_script: skip
    after_script: skip
    script:
    - "./release_docs.sh"
    deploy:
    - provider: pages
      skip_cleanup: true
      github_token: "$GITHUB_TOKEN"
      local_dir: docs/
      on:
        all_branches: true
    - provider: npm
      skip_cleanup: true
      # email:
      #   secure: "$NPM_EMAIL"
      on:
        tags: true
        all_branches: true
        repo: parse-community/parse-server
deploy:
  api_key:
    secure: Yrng6jsnMAtzrrln9DwRuY4xpcxl/WYS/1A5fckyQF6DsLmNlvqVtu3MWF+zdJgANF63G3jIee11tNBpYRecHl8FjPGwO0kc1vEgvIRVnveyR0bwIIDH6s/mR9dg4rZikflwG4XExsLyaQd7ko8aTIOIayfxJiv/u0yqwuBuBW2bFrL/41b1cKGK5+Iq2a+PdFENUPenKXISkACGaMnQF4Y/KVF98UwCiGLf957yFWc2sD6TFbjNDbAENSccvg1J3fBb+djbtzKzldl29ntp2mKVGSVASiKCRa6hSfgQulHiidFqFIKgpYJ1uATRr3UFr/NRVt1WbrgLnzY74OCX7y02c/xiYQMMEPRl/P8hHJu+KjQ3PBWsBvmsRN0QMUJv3PEjUPE3AY8sw49NoxiJZzJr7574vUBuM/dk0byYI6K/gwmUrPIhQjljzZqinS8JJJ4FjGjCdzXRhT5Q+PZvt5bF1rMOZXayNJZa+cICtmiJoU3vO2Yf6TXC3wY1veKvmcs24nws5lp4keJePTKAi1Ig7VoSxwAlgs3EGANIh7oBKx9zWnXQYMdmxbYsvLXAWcnnM+PcSCvooLmXWso3BQBeRuUUSS2oLaBpsFMsiniLNbA1cW4fwMkgUGz4oEDRi8wTD89E/1J2oNxzqtWRPawcVKpMpnBbDJHrWJPEHMw=
